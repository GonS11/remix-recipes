// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//generator especifica el paquete que usa prisma Client
generator client {
  provider = "prisma-client-js"
}

//Datasource dice a prisma como conextarse, que se conecte a prostgresql y use los datos en env de DATABASE_URL
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  email String @unique
  firstName String
  lastName String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

//Relacion 1 a muchos como shelf con items
  pantryShelves PantryShelf[]
  pantryItems PantryItem[]
  recipes  Recipe[]
}

//Para crear tablas creamos modelos. SIEMPRE CADA MODELO NECESITA @id (@=atributo, id=PK). ciud() genera id unico, NO PUEDE SER ESTATICO
model PantryShelf{
  id String @id @default(cuid())
  name String 
  userId String 

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  user User @relation(fields: [userId],references: [id])
  
  items PantryItem[]
}

model PantryItem{
  id String @id @default(cuid())
  name String 
  shelfId String
  userId String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  user User @relation(fields: [userId],references: [id])
  shelf PantryShelf @relation(fields: [shelfId],references: [id],onDelete: Cascade)
}

//Si se hacen modificaciones en el schema.prisma model, en la consola poner (Parar todo):
// - npx prisma db push
model Recipe{
  id  String @id @default(cuid())
  name String
  instructions String
  totalTime String
  imageUrl  String
  userId  String
  mealPlanMultiplier Int?

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  user User @relation(fields: [userId],references: [id])
  ingredients  Ingredient[]
}

model Ingredient{
  id  String @id @default(cuid())
  name  String
  amount  String
  recipeId  String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  recipe  Recipe  @relation(fields: [recipeId],references: [id],onDelete: Cascade)
}

